/* Creates annotation and sets scale
/*
/* Args: NONE
/*
/* Input:
/*    taxbound
/*    tmptaxmap1
/*    annostd.lut - a table telling what font, fontsize, bold, italic to use for each level and scale
/*
/* Output:
/*    tmptaxmap2   
/*    tmptaxseemap annotation.igds   
/*    tmptaxcodan
/*    tmptaxlotan
/*
&WATCH 04-convertanno.wat &COMMANDS

&do name &list taxbound, tmptaxmap1
  &if ^ [exists %name% -cover] &then &do 
    &type Missing %name%
    &return ; &return
  &end
&end

&do name &list tmptaxlotan, tmptaxcodan, tmptaxmap2, tmptaxseemap, tbigds, igds
  &if [exists %name% -cover] &then &do
    kill %name% all
  &end
&end

&type -- 1. Copy the coverage we will modify
copy tmptaxmap1 tmptaxmap2

&type -- 2. Add tmptaxmap2 annotation attributes
/* this section moved from 01-MakeTaxbound.aml

/* Create anno.igds -- 
addtext tmptaxmap2 igds 

additem tmptaxmap2.tatigds tmptaxmap2.tatigds maplevel 3 3 i 
additem tmptaxmap2.tatigds tmptaxmap2.tatigds mapsize 8 8 n 2 
additem tmptaxmap2.tatigds tmptaxmap2.tatigds mapscale 5 5 i
additem tmptaxmap2.tatigds tmptaxmap2.tatigds mapnumber 20 20 c 

/* I already added these to tmptaxmap1 in 01-MakeTaxbound.aml
/* additem tmptaxmap2.tatigds tmptaxmap2.tatigds AUTOWHO,30,30,c 
/* additem tmptaxmap2.tatigds tmptaxmap2.tatigds AUTOMETHOD,3,3,c 
/* additem tmptaxmap2.tatigds tmptaxmap2.tatigds AUTODATE,8,10,d 
/* additem tmptaxmap2.tatigds tmptaxmap2.tatigds STDSIZE,4,5,B 

&type -- 3. Build point coverage for annotation and overlay it with map boundary using generate and intersect 

/* This creates a file "genanno.txt" in the project folder that contains only the OID,X,Y
&data arc info 
arc
SEL TMPTAXMAP2.TATIGDS
ALTER IGDS-ID 
,10,,,,,,,,,,,,,
CALC IGDS-ID = IGDS# 
OUTPUT ../GENANNO.TXT INIT
CALC $COMMA-SWITCH = -1 
DIS IGDS-ID,X,Y PRINT 
DIS 'end' print 
q stop
&end 

IDEDIT tmptaxmap2 ANNO.IGDS

/* "Generate" is an external command like ARCEDIT
GENERATE IGDS
INPUT GENANNO.TXT 
POINTS 
Q
/* The points are loaded into some limbo-land tablespace in coverage igds by "generate"
/* and then turned into an actual point featureclass by this command
build IGDS point

/* This effectively copies the attributes from the taxbound points to the igds points and put them in tbigds
/*   intersect in_cover intersect_cover out_cover POLY|LINE|POINT tolerance JOIN|NOJOIN
INTERSECT igds taxbound tbigds POINT 

&type -- 4. Copy the important attributes from TBIGDS to TMPTAXMAP2 annotation
/* We do this by setting up a "RELATE" between the TBIGDS point attributes and the TMPTAXMAP2 annotation attributes

&DATA ARC INFO
ARC
SEL TBIGDS.PAT 
ALTER IGDS-ID
,10,,,,,,,,,,,
SORT IGDS-ID 
SEL TMPTAXMAP2.TATIGDS 
RELATE TBIGDS.PAT BY IGDS-ID WITH ORDER
CALC $NM = 1 
MOVE $1MAPNUMBER TO MAPNUMBER 
MOVE $1PAGENAME TO PAGENAME
MOVE $1AUTODATE TO AUTODATE
MOVE $1AUTOMETHOD TO AUTOMETHOD
MOVE $1AUTOWHO TO AUTOWHO
CALC MAPSCALE = $1MAPSCALE 
Q STOP
&END

&type -- 5. Save annotation for tmptaxseemap and save map assignments
/* Do this AFTER modifying tmptaxmap2 so that we get the updated attributes for PAGENAME etc etc

arcedit
ec tmptaxmap2
ef anno.igds 
sel $level > 999
&if [show number select] > 0 &then &do
  put tmptaxseemap
  delete
&end
sel all
calc maplevel = $level 
calc mapsize = $size
save
q 

&type -- 6. Calc feature types to standard 

arcedit

ec tmptaxmap2 
ef anno.igds

/* 56 = Zone annotation
sel $LEVEL = 56
&if [show number select] > 0 &then &do
  /* 58 = Adjacent
  calc $LEVEL = 58 
&end

/* 20 = Station
sel $LEVEL = 20 
res $TEXT CN 'P.' OR $TEXT CN '+' OR $TEXT CN 'PC' OR $TEXT CN 'EQUATION' or $TEXT CN 'STA. ' or $TEXT CN 'PT' 
/*res $TEXT CN 'P.T.' OR $TEXT CN 'P.C.' OR $TEXT CN 'P.R.C.' OR $TEXT CN 'PT' OR $TEXT CN '+'  OR $TEXT CN 'ST ' OR $TEXT CN 'S.T' or $TEXT CN 'STATION'
&if [show number select] > 0 &THEN &DO 
   NSEL
   res $LEVEL = 20 
   &IF [SHOW NUMBER SELECT] > 0 &THEN &DO 
    /* 36 = Reference Notes
     CALC $LEVEL = 36	
   &END 
&END  

/* All unassigned annotation is going into ref notes regardless of size 
/* Do this by selecting everything we're interested in,
/* then invert the selection, leaving random unassigned things selected
/* Then mark all those unselected things as LEVEL=36

sel $level = 10 or $level = 13 or $level = 16 or $level = 19 or $level = 20 or $level = 23 or $level = 25 or $level = 27 or $level = 34 or $level = 36 or $level = 37 
asel $level = 38 or $level = 39 or $level = 41 or $level = 42  or $level = 43 or $level = 45 or $level = 46 or $level = 47 or $level = 54 or $level = 58 or $level = 62
res $level < 1000 
nsel 

&if [show number select] > 0 &then &do
    /* 36 = Reference Notes
    calc $LEVEL = 36
&end 

sel all
/* calc $SIZE = 0
calc $SYMBOL = $LEVEL 
calc LEVEL = $LEVEL

/* 34 = bearing/distance
/* 41 = subdivision name
sel $LEVEL = 34 or $level = 41
&if [show number select] > 0 &then &do
  calc $SIZE = $SIZE * 1.4                                /* Dean Added Jan 25 2018 
&end

save 
q

&type -- 7. Calc new standard sizes as set by Tom from Christi --- Dean loaded to $SIZE - Jan 2018 

&S X = [DELETE ANNOSTD.LUT -INFO]
copyinfo C:\GeoModel\Clatsop\AnnoGenCov\info!ARC!ANNOSTD.LUT  ANNOSTD.LUT 

&DATA ARC INFO
ARC
CALC $NM = 1
SEL TMPTAXMAP2.TATIGDS
RELATE ANNOSTD.LUT BY LEVEL WITH ORDER 
ASEL
RES MAPSCALE = 100
CALC STDSIZE = $1SIZE100
ASEL
RES MAPSCALE = 200 
CALC STDSIZE = $1SIZE200
ASEL
RES MAPSCALE = 400 
CALC STDSIZE = $1SIZE400
ASEL
RES MAPSCALE = 2000 
CALC STDSIZE = $1SIZE2000

ASEL
RES MAPSCALE = 100 AND LEVEL = 10 AND MAPSIZE <> 20
CALC STDSIZE = $1SIZE100 * MAPSIZE / 20 
ASEL
RES MAPSCALE = 200 AND LEVEL = 10 AND MAPSIZE <> 28
CALC STDSIZE = $1SIZE200  * MAPSIZE / 28 
ASEL
RES MAPSCALE = 400 AND LEVEL = 10 AND MAPSIZE <> 40
CALC STDSIZE = $1SIZE400  * MAPSIZE / 40 
ASEL
RES MAPSCALE = 2000 AND LEVEL = 10 AND MAPSIZE <> 200
CALC STDSIZE = $1SIZE2000  * MAPSIZE / 200 

ASEL
RES MAPSCALE = 100 AND LEVEL = 41 AND MAPSIZE <> 24
CALC STDSIZE = $1SIZE100  * MAPSIZE / 24 
ASEL
RES MAPSCALE = 200 AND LEVEL = 41 AND MAPSIZE <> 48
CALC STDSIZE = $1SIZE200 * MAPSIZE / 48 
ASEL
RES MAPSCALE = 400 AND LEVEL = 41 AND MAPSIZE <> 96
CALC STDSIZE = $1SIZE400 * MAPSIZE / 96 
ASEL
RES MAPSCALE = 2000 AND LEVEL = 41 AND MAPSIZE <> 480
CALC STDSIZE = $1SIZE2000 * MAPSIZE / 480 

ASEL
RES MAPSCALE = 100 AND LEVEL = 54 AND ( MAPSIZE < 49 or MAPSIZE > 51 ) 
CALC STDSIZE = $1SIZE100  * MAPSIZE / 50
ASEL
RES MAPSCALE = 200 AND LEVEL = 54 AND ( MAPSIZE < 99 or MAPSIZE > 101 ) 
CALC STDSIZE= $1SIZE200 * MAPSIZE / 100 
ASEL
RES MAPSCALE = 400 AND LEVEL = 54 AND ( MAPSIZE < 199 or MAPSIZE > 201 ) 
CALC STDSIZE = $1SIZE400 * MAPSIZE / 200
ASEL
RES MAPSCALE = 2000 AND LEVEL = 54 AND ( MAPSIZE < 999 or MAPSIZE > 1001 ) 
CALC STDSIZE = $1SIZE2000 * MAPSIZE / 1000

Q STOP
&END 


/* 
/* arcedit
/* ec tmptaxmap2
/* ef anno.igds
/* sel all
/* calc $size = stdsize 
/* save
/* q
/* addtext tmptaxmap2 igds 


&type -- 8. Create taxlot and taxcode anno - Dean Nov 2017 to remove linked anno 
/* Update so have anno levels for each scale for both 

&type -- 8.1 Make intermediate Taxlot Anno

reselect tmptaxmap2 tmptaxlotan anno.igds      
RES level = 37 and ( text cn 'L' or text nc 'C' or text nc 'A' or text nc 'M' or text nc 'U' )
[unquote ' ']
n
n

&type -- 8.2. Make intermediate Taxcode Anno 

reselect tmptaxmap2 tmptaxcodan anno.igds      /* make coverage 
res level = 54 
[unquote ' ']
n
n

&type -- 8.3 Delete both taxlot and taxcode from Tmptaxmap2 Anno 

arcedit 
ec tmptaxmap2
ef anno.igds 
sel $level = 37 and ( $text cn 'L' or $text nc 'C' or $text nc 'A' or $text nc 'M' or $text nc 'U' )
delete 
sel $level = 54 
delete 
save
q

&type -- 9. Edit taxcode and taxlot anno and assign new levels based on scale - Dean Jan 2018 

arcedit 
ec tmptaxlotan
ef anno.igds

sel mapscale = 100 
&if [show number select] > 0 &then &do  
  calc $level = 0
  calc $symbol = 0
&end 

sel mapscale = 200 
&if [show number select] > 0 &then &do 
  calc $level = 1
  calc $symbol = 1 
&end

sel mapscale = 400 
&if [show number select] > 0 &then &do 
  calc $level = 2
  calc $symbol = 2 
&end

sel mapscale = 2000 
&if [show number select] > 0 &then &do 
  calc $level = 3
  calc $symbol = 3 
&end

save 

ec tmptaxcodan 
ef anno.igds

sel mapscale = 100 
&if [show number select] > 0 &then &do 
  calc $level = 0
  calc $symbol = 0 
&end 

sel mapscale = 200 
&if [show number select] > 0 &then &do  
  calc $level = 1
  calc $symbol = 1 
&end

sel mapscale = 400 
&if [show number select] > 0 &then &do 
  calc $level = 2
  calc $symbol = 2 
&end

sel mapscale = 2000 
&if [show number select] > 0 &then &do 
  calc $level = 3
  calc $symbol = 3 
&end

save
Q

addtext tmptaxlotan IGDS 
addtext tmptaxcodan IGDS

&type -- 99. Kill temp files

&do name &list tbigds, igds
  &if [exists %name% -cover] &then &do
    &type kill %name%
    kill %name% all
  &end
&end

&type -- That's all! --
&RETURN
