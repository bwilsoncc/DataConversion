/* Creates intermediary file tmptaxmap2
/*
/* Args: NONE
/*
/* Input:
/*    tmptaxbound
/*    tmptaxmap1
/*    annostd.lut - a table telling what font, fontsize, bold, italic to use for each level and scale
/*
/* Output:
/*    tmptaxmap2   
/*
&WATCH 04-tmptaxmap2.wat &COMMANDS

&do name &list tmptaxbound, tmptaxmap1
  &if ^ [exists %name% -cover] &then &do 
    &type Missing %name%
    &return ; &return
  &end
&end

&do name &list tmptaxmap2, tbigds, igds
  &if [exists %name% -cover] &then &do
    kill %name% all
  &end
&end

&type -- 1. Copy the coverage we will modify
copy tmptaxmap1 tmptaxmap2

&type -- 2. Add tmptaxmap2 annotation attributes
/* this section was moved from 01-MakeTaxbound.aml

/* Create anno.igds --

/* I believe this to be completely redundant
addtext tmptaxmap2 igds


/* These are just needed to deal with code that can't handle the $
/* with passing the $ as an arg in 05-annotation.
/* This means we have to copy $* into * down below in a few lines...
/* dropitem tmptaxmap2.tatigds tmptaxmap2.tatigds LEVEL
/* dropitem tmptaxmap2.tatigds tmptaxmap2.tatigds SYMBOL

/*additem tmptaxmap2.tatigds tmptaxmap2.tatigds maplevel 3 3 i 
additem tmptaxmap2.tatigds tmptaxmap2.tatigds mapscale 5 5 i
additem tmptaxmap2.tatigds tmptaxmap2.tatigds mapnumber 20 20 c 

/* These are intermediate fields for use in INFO
/* ORIGSIZE will have the current $SIZE in it and NEWSIZE will hold the new size until we write it back to $SIZE

/* NEWSIZE used to be a binary value and I am thinking a floating point number makes more sense
additem tmptaxmap2.tatigds tmptaxmap2.tatigds ORIGSIZE 8 8 n 2 
additem tmptaxmap2.tatigds tmptaxmap2.tatigds NEWSIZE  8 8 n 2 
/*additem tmptaxmap2.tatigds tmptaxmap2.tatigds NEWSIZE,4,5,B 

&type -- 3. Build point coverage for annotation and overlay it with map boundary using generate and intersect 

/* This creates a file "genanno.txt" in the project folder that contains only the OID,X,Y
&data arc info 
arc
SEL TMPTAXMAP2.TATIGDS
ALTER IGDS-ID 
,10,,,,,,,,,,,,,
CALC IGDS-ID = IGDS# 
OUTPUT ../GENANNO.TXT INIT
CALC $COMMA-SWITCH = -1 
DIS IGDS-ID,X,Y PRINT 
DIS 'end' print 
q stop
&end 

IDEDIT TMPTAXMAP2 ANNO.IGDS

/* "Generate" is an external command like ARCEDIT
GENERATE IGDS
INPUT GENANNO.TXT 
POINTS 
Q
/* The points are loaded into some limbo-land tablespace in coverage igds by "generate"
/* and then turned into an actual point featureclass by this command
build IGDS point

/* This effectively copies the attributes from the tmptaxbound points
/* to the igds points and put them in tbigds
/*  format: intersect in_cover intersect_cover out_cover POLY|LINE|POINT tolerance JOIN|NOJOIN
INTERSECT igds tmptaxbound tbigds POINT 

&type -- 4. Copy the attributes we need from TBIGDS to tmptaxmap2 annotation
/* We do this by setting up a "RELATE" between the TBIGDS point attributes and the tmptaxmap2 annotation attributes

&DATA ARC INFO
ARC
SEL TBIGDS.PAT 
ALTER IGDS-ID
,10,,,,,,,,,,,
SORT IGDS-ID 
SEL TMPTAXMAP2.TATIGDS 
RELATE TBIGDS.PAT BY IGDS-ID WITH ORDER
CALC $NM = 1 
MOVE $1MAPNUMBER TO MAPNUMBER 
MOVE $1PAGENAME TO PAGENAME
MOVE $1AUTODATE TO AUTODATE
MOVE $1AUTOMETHOD TO AUTOMETHOD
MOVE $1AUTOWHO TO AUTOWHO
CALC MAPSCALE = $1MAPSCALE 
Q STOP
&END

&type -- 5. Calc feature types to standard

/* There are some TEXT fields with SEE MAP but symbol <> 62, fix that here.

/* FIXME - SYMBOL=38 and TEXT != acres, usually it should be changed
/* to 62, but you have to use a regular expression to determine that
/* the pattern is an acre value. Can be any of "0.12 AC" "0.12" "0.12 Ac"
/* etc...

arcedit
ec tmptaxmap2
ef anno.igds

sel $SYMBOL <> 62 AND TEXT LK 'SEE*MAP*'   /* Can be "SEE MAP" or "SEE      MAP"....
&if [show number select] > 0 &then &do
  calc $SYMBOL = 62
&end

save
q

/* I don't know that this does anything meaningful at all. $LEVEL is a binary field and MAPLEVEL is integer
/* so I seem to end up with a field that has no meaningful information in it
/*&DATA ARC INFO
/*ARC
/*SEL tmptaxmap2.TATIGDS
/*MOVE LEVEL TO MAPLEVEL
/*Q STOP
/*&end

arcedit
ec tmptaxmap2 
ef anno.igds

&type -- Populate MAPLEVEL and ORIGSIZE as defaults
sel all
/*calc maplevel = $LEVEL /* this throws an error so I do it in and info session instead, above
calc ORIGSIZE = $SIZE /* this throws an error in the info session, so I do it here, instead. Sigh.

/* 56 = Zone annotation (Used for beach vegetation line per ORS 390.770)
/* I think Dean has this here because they use it for county boundary instead
/* We don't want to touch it.
/* sel $LEVEL = 56
/* &if [show number select] > 0 &then &do
/*   /* 58 = Adjacent
/*   calc $LEVEL = 58 
/* &end

/* 20 = Station
sel $LEVEL = 20 
res $TEXT CN 'P.' OR $TEXT CN '+' OR $TEXT CN 'PC' OR $TEXT CN 'EQUATION' or $TEXT CN 'STA. ' or $TEXT CN 'PT' 
/*res $TEXT CN 'P.T.' OR $TEXT CN 'P.C.' OR $TEXT CN 'P.R.C.' OR $TEXT CN 'PT' OR $TEXT CN '+'  OR $TEXT CN 'ST ' OR $TEXT CN 'S.T' or $TEXT CN 'STATION'
&if [show number select] > 0 &THEN &DO 
   NSEL
   res $LEVEL = 20 
   &IF [SHOW NUMBER SELECT] > 0 &THEN &DO 
    /* 36 = Reference Notes
     CALC $LEVEL = 36	
   &END 
&END  

/* All unassigned annotation is going into ref notes regardless of size 
/* Do this by selecting everything we're interested in,
/* then invert the selection, leaving random unassigned things selected
/* Then mark all those unselected things as LEVEL=36

SEL $SYMBOL in {10,13,16,19,20,23,25,27,34,36,37,38,39,41,42,43,45,46,47,54,58,62}
NSEL 
&if [show number select] > 0 &then &do
    /* 36 = Annotation class for "Reference Notes"
    calc $LEVEL = 36
&end 

/*sel all
/*calc $SIZE = 0
/*calc $SYMBOL = $LEVEL /* Well I don't think I want to lose this, I want a separate symbol and class id
calc LEVEL = $LEVEL

save 
q

&type -- 7. Use lookup table to adjust font sizes based on SYMBOL and MAPSCALE and ORIGSIZE
/* "ORIGSIZE" should have the original font size in it.

/* FIXME - there are other mapscales!!!

/* annostd.lut is a table containing
/* LEVEL        annotation level, eg 10 for Public Road Name
/* SIZE100      float, points, like 14.0
/* SIZE200
/* SIZE400
/* SIZE2000
/* STDFONT      font name, eg Arial
/* STDBOLD      0|1
/* STDITALIC    0|1


&S X = [DELETE ANNOSTD.LUT -INFO]
copyinfo C:\GeoModel\Clatsop\AnnoGenCov\info!ARC!ANNOSTD.LUT  ANNOSTD.LUT 

&DATA ARC INFO
ARC
CALC $NM = 1
SEL TMPTAXMAP2.TATIGDS
RELATE ANNOSTD.LUT BY LEVEL WITH ORDER 
ASEL
RES MAPSCALE <= 100
CALC NEWSIZE = $1SIZE100
ASEL
RES MAPSCALE = 200 
CALC NEWSIZE = $1SIZE200
ASEL
RES MAPSCALE = 400 
CALC NEWSIZE = $1SIZE400
ASEL
RES MAPSCALE = 2000 
CALC NEWSIZE = $1SIZE2000
ASEL
RES MAPSCALE <= 100 AND LEVEL = 10 AND ORIGSIZE <> 20
CALC NEWSIZE = $1SIZE100 * ORIGSIZE / 20 
ASEL
RES MAPSCALE = 200 AND LEVEL = 10 AND ORIGSIZE <> 28
CALC NEWSIZE = $1SIZE200  * ORIGSIZE / 28 
ASEL
RES MAPSCALE = 400 AND LEVEL = 10 AND ORIGSIZE <> 40
CALC NEWSIZE = $1SIZE400  * ORIGSIZE / 40 
ASEL
RES MAPSCALE = 2000 AND LEVEL = 10 AND ORIGSIZE <> 200
CALC NEWSIZE = $1SIZE2000  * ORIGSIZE / 200 
ASEL
RES MAPSCALE <= 100 AND LEVEL = 41 AND ORIGSIZE <> 24
CALC NEWSIZE = $1SIZE100  * ORIGSIZE / 24 
ASEL
RES MAPSCALE = 200 AND LEVEL = 41 AND ORIGSIZE <> 48
CALC NEWSIZE = $1SIZE200 * ORIGSIZE / 48 
ASEL
RES MAPSCALE = 400 AND LEVEL = 41 AND ORIGSIZE <> 96
CALC NEWSIZE = $1SIZE400 * ORIGSIZE / 96 
ASEL
RES MAPSCALE = 2000 AND LEVEL = 41 AND ORIGSIZE <> 480
CALC NEWSIZE = $1SIZE2000 * ORIGSIZE / 480 
ASEL
RES MAPSCALE <= 100 AND LEVEL = 54 AND ( ORIGSIZE < 49 or ORIGSIZE > 51 ) 
CALC NEWSIZE = $1SIZE100  * ORIGSIZE / 50
ASEL
RES MAPSCALE = 200 AND LEVEL = 54 AND ( ORIGSIZE < 99 or ORIGSIZE > 101 ) 
CALC NEWSIZE= $1SIZE200 * ORIGSIZE / 100 
ASEL
RES MAPSCALE = 400 AND LEVEL = 54 AND ( ORIGSIZE < 199 or ORIGSIZE > 201 ) 
CALC NEWSIZE = $1SIZE400 * ORIGSIZE / 200
ASEL
RES MAPSCALE = 2000 AND LEVEL = 54 AND ( ORIGSIZE < 999 or ORIGSIZE > 1001 ) 
CALC NEWSIZE = $1SIZE2000 * ORIGSIZE / 1000
Q STOP
&END

&type -- Copy recalculated NEWSIZE back to $SIZE
/* Let's see what happens if we accept that the original sizes are actually useful??
/* arcedit
/* ec tmptaxmap2
/* ef anno.igds
/* 
/* /* Do not overwrite a legit size with a ZERO!
/* sel NEWSIZE > 0
/* &if [show number select] > 0 &then &do
/*   calc $SIZE = NEWSIZE
/* &end
/* save
/* q

/* We're done with these now, delete them so they don't confuse Brian later on...
dropitem tmptaxmap2.tatigds tmptaxmap2.tatigds LEVEL
/* Note they get dropped anyway when the annotation is pushed into templates
/*dropitem tmptaxmap2.tatigds tmptaxmap2.tatigds ORIGSIZE
/*dropitem tmptaxmap2.tatigds tmptaxmap2.tatigds NEWSIZE

/* &type -- Kill temp files
kill tbigds
kill igds

&type -- That's all! --
&RETURN
